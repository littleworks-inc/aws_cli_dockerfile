name: Build and publish a Docker image
on:
  push:
    branches:
      - '*'
jobs:
  build:
    name: Build & push docker image
    runs-on: ubuntu-latest
    env:
      IMG_NAME: devtoolhub/aws_cli
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Debug
        run: |
          echo "github.ref -> {{ github.ref }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: lint Action
        uses: hadolint/hadolint-action@v2.0.0
        with:
            dockerfile: Dockerfile
            ignore: DL3018,SC2046,DL4006
            failure-threshold: warning
            no-color : false
            no-fail: true

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
                 
      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMG_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.metadata.outputs.tags }}

      - name: Run Snyk to check Docker image for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
            image: ${{ steps.metadata.outputs.tags }}
            args: --severity-threshold=high
    #   - name: Run Trivy vulnerability scanner
    #     id: vulnerability_scan
    #     uses: docker/scout-action@v1
    #     with:
    #       command: cves
    #       image:  ${{ steps.metadata.outputs.tags }}
    #       ignore-unchanged: true
    #       only-severities: critical,high

    #   - name: Check vulnerability scan result
    #     run: |
    #       if [[ "${{ steps.vulnerability_scan.outcome }}" == "success" ]]; then
    #         echo "Vulnerability scan passed. Proceeding to build and push Docker image."
    #       else
    #         echo "Vulnerability scan failed. Skipping Docker image build and push."
    #         exit 1
    #       fi

    #   - name: Build and push Docker image
    #     if: success()  # Only run if vulnerability scan succeeded
    #     uses: docker/build-push-action@v5
    #     with:
    #       context: .
    #       push: false
    #       tags: ${{ steps.metadata.outputs.tags }}
