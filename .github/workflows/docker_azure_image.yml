name: Build and publish a Docker image
on:
  push:
    branches:
      - '*'

env:
    REGISTRY: devtoolhub
    IMAGE_NAME: azure_cli
    COMPARE_TAG: latest
    SHA: ${{ github.event.after }}
jobs:
  build:
    name: Azure Build & push docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            ref: ${{ env.SHA }}

      - name: Debug
        run: |
          echo "github.ref -> {{ github.ref }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
            driver-opts: |
              image=moby/buildkit:v0.13.0

      - name: lint Action for Azure
        uses: hadolint/hadolint-action@v2.0.0
        with:
            dockerfile: azure/Dockerfile
            ignore: DL3018,SC2046,DL4006
            failure-threshold: warning
            no-color : false
            no-fail: true

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
                 
      - name: Azure Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.revision=${{ env.SHA }}
          tags: |
            type=edge,branch=$repo.default_branch
            type=semver,pattern=v{{version}}
            type=sha,prefix=,suffix=,format=short

      - name: Azure Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: azure/
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Azure Docker Scout
        id: docker-scout
        uses: docker/scout-action@v1
        with:
            image: ${{ steps.metadata.outputs.tags }}
            command: cves
            ignore-unchanged: true
            only-severities: critical,high,medium,low,unspecified
            only-fixed: true
